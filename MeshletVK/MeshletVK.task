#version 450

#extension GL_NV_mesh_shader : require
#extension GL_KHR_shader_subgroup_ballot : require

taskNV out Task {
  uint MeshletIDs[32];
} Payload;

//!< 可視判定, LOD, テセレーション等, 動的なものにタスクシェーダーを使う、静的なものならメッシュシェーダのみで良い
layout(local_size_x = 16) in; //!< 自分の環境では gl_MaxTaskWorkGroupSizeNV.x == 32 が最大だった
void main()
{
	bool Visible = true;
	//bool Visible = 0 == (gl_LocalInvocationID.x % 2);
	//bool Visible = 1 == (gl_LocalInvocationID.x % 2);
	
	//!< スレッド間同期される
	uvec4 Vote = subgroupBallot(Visible);

	if(Visible)
	{
        //!< subgroupBallotExclusiveBitCount() : true を返す(より若い)スレッド数を返す、結果的に true を返すスレッド ID が前詰めで格納されていく
		Payload.MeshletIDs[subgroupBallotExclusiveBitCount(Vote)] = uint(gl_LocalInvocationID.x);
	}

    //!< subgroupBallotBitCount() : true を返す全スレッド数を返す、その分(メッシュレット数)だけメッシュシェーダを起動する(gl_TaskCountNV)
	gl_TaskCountNV = subgroupBallotBitCount(Vote);
}